This file describes the structure of the pipeline, and describes the parameters that can be set in the json file.
The official calibration cascade is available here: https://www.eso.org/observing/dfo/quality/ALL/OCA/CALSELECTOR/SPHERE/2015-03-27/cascade_SPHERE_ALL.html

************************ CALIBRATION outline ***************************

STEPS:
0: raw file classification
1-6. IRDIS
    #1. master dark
    #2. calculate gains
    #3. good SKY BKG or INS BG (in order of priority)
    #4. make master SKY BKG or INS BG (or pca sky subtr)
    #5. master flat
    #6. actual reduction
10-20 IFS
    #10. master dark
    #11. calculate gains
    #12. master detector flat
    #13. spectra positions
    #14. total instrument flat
    #15. wave calibration
    #16. IFU flat
    #17. sky cubes
    #18. actual reduction (OBJ)
    #19. actual reduction (CEN if any)
    #20. actual reduction (PSF if any)

***************** Description of json file parameters ******************

# PATHS:
    "path": str, parent path -- subdirectories with products will be created in there
    "inpath": str, where raw downloaded files should be placed. Set as path+"raw/" by default
   
# OBSERVATION:
## First run  dfits *.fits |fitsort DET.SEQ1.DIT INS1.FILT.NAME INS1.OPTI2.NAME DPR.TYPE INS4.COMB.ROT INS.COMB.IFLT in the 'raw' directory to fill the appropriate values.
    "dit_ifs": float, integration time of science IFS observations to be considered
    "dit_irdis" : float, integration time of science IRDIS observations to be considered
    "dit_psf_ifs" : float, integration time of FLUX IFS observations to be considered
    "dit_psf_irdis": float, integration time of FLUX IRDIS observations to be considered
    "dit_cen_ifs": float, integration time of CENTER IFS observations to be considered
    "dit_cen_irdis": float, integration time of CENTER IRDIS observations to be considered
    "instr": str, instrument name in file name
    "comb_iflt": str, optional, value for 'INS.COMB.IFLT' header keyword to be considered for the science cubes of interest. If not provided, will automatically search for the value with the largest occurrence in fits file headers in inpath.
    "mode": str, IFS mode (used for spectra positions). E.g. "YJH" or "YJ". Does not matter if only IRDIS data are reduced. Given by the INS2 COMB IFS keyword. OBS_YJ (YJ) or OBS_H (YJH).

# TO DO LIST:
    "do_irdis": bool, whether to reduce IRDIS data
    "do_ifs": bool, whether to reduce IFS data
    "to_do": set of integers corresponding to parts of calib to be done (e.g. {0,1,2,3}).
    Full correspondence:
    #0. classification
    ## 1-6. IRDIS
    #1. master dark
    #2. calculate gains
    #3. good SKY BKG or INS BG (in order of priority)
    #4. make master SKY BKG or INS BG (or pca sky subtr)
    #5. master flat
    #6. actual reduction
    ## 10-20 IFS
    #10. master dark
    #11. calculate gains
    #12. master detector flat
    #13. spectra positions
    #14. total instrument flat
    #15. wave calibration
    #16. IFU flat
    #17. sky cubes
    #18. actual reduction (OBJ)
    #19. actual reduction (CEN if any)
    #20. actual reduction (PSF if any)
    
# REDUCTION params (somewhat likely to require change)
## For optimal reduction, you may check the sky cubes by eye and possibly adapt values below:
    "good_sky_irdis": list of str or list of int, #which skies to use for IRDIS? ['all'] or list of indices (chronological order). If empty list, will either use_ins_bg or just subtract the dark.
    "good_psf_sky_irdis": list of str or list of int, #which skies to use for IRDIS? ['all'] or list of indices (chronological order). If empty list, will either use_ins_bg or just subtract the dark.
    "good_sky_list":  list of str or list of int, #which skies to use for IFS? If [-1]: just uses the first frame of the first sky at the end of the sequence (reproduce best the remanence effect, if any). If a list of indices: uses all frames from all those cubes. If ['all']: uses all.
    "good_psf_sky_list": same as above for psf sky of IFS data
    "pca_subtr": True, # whether to do a PCA sky subtraction for IRDIS images (never used for IFS)
    "corner_coords": [[39,215],[72,62],[247,78],[216,230]], # x,y coords where the sky will be manually estimated for IFS # !!! ADAPT IF STAR NOT CENTERED
    "msky_ap": 17, #aperture for manual sky level estimation in IFS data
    "corner_coords_psf": [(52,209)], # x,y coords where the sky will be manually estimated for IFS PSF# !!! ADAPT IF STAR NOT CENTERED (e.g. if star is off-centered, only provide one tuple corresponding to opposite corner)
    "msky_ap_psf": 20, #aperture for manual sky level estimation in IFS PSF ('FLUX') data

# REDUCTION params (unlikely to be changed based on tests on a few datasets)
    "xtalk_corr": False, # whether cross talk should be corrected for IFS data. EDIT: Don't? It looks too aggressive.

    ## darks
    "indiv_fdark": True,  # whether to subtract individual dark to each flat for IFS (not included in esorex recipes or esoreflex, so this is done manually and leads to fewer artefacts).
    The darks associated to the flats do not come with the raw calibration data from the ESO archive and need to be selected and downloaded manually. They are usually taken the morning after.
    "dark_ifs": [0] # list containing either 0 (False) or any combination of 'OBJ', 'PSF', 'CEN' and 'FLAT'. Tells whether to subtract the MASTER dark, and if so for which type of files. Note: only relevant for FLAT, since in most cases a SKY is available for OBJ, CEN or PSF which already includes a DARK. If ['FLAT'] instead of [0] just provide a DARK file with the min DIT among FLATs in the raw folder. Recommended: [0] combined with indiv_fdark = True.

    ## flats:
    "illum_pattern_corr": True, # whether the illumination pattern of lenslets is to be taken into account. A low level wave-like structure can appear in the result if it is not applied.
    "flat_fit": False # If fitting method is to be a robust linear fit. This will reduce the effect of cosmic rays and other temporary bad pixels.
    "large_scale_flat": 0, # Recommended 0 (deprecated, not used) in v1.47 2023-05-10 manual. Choice between "all" (as recommended in v1.38 manual), "some" (as recommended in v1.40 manual) or 0. See sph_ifs_science_dr description.
    "flat_smooth_method_idx": 1, # The smoothing method to use for large_scale_flat. Default 1 in sph_ifs_master_detector_flat recipe (0: CPL filter, 1: FFT filter).
    "flat_smooth_length": 10, # The smoothing length for the large_scale_flat. Default 10 in sph_ifs_master_detector_flat description.

    ## spectra position
    "specpos_distort_corr": True, # See sph_ifs_spectra_positions description
    "specpos_nonlin_corr": True, # See sph_ifs_spectra_positions description

    ## wavelength calibration
    "poly_order_wc": 2, # The order of the polynomial to use for the wavelength model -> 1, 2, 3, or 0 for automatic. Default 2 in sph_ifs_wave_calib. If the order is 1, a linear model with constant dispersion is assumed. Recommended: 2 for a quadratic fit to the three lasers in YJ mode, and 3 for a cubic fit to the four lasers in YJH mode. Also see Samland+2022 Section 3.5. There is no calibration laser at 1.54Âµm, so the wavelength solution in these long wavelengths is an extrapolation.
    "wc_win_sz": 4, # default is 4 in sph_ifs_wave_calib (but worked well with 2 on 2019-2020 datasets). Half the tolerance around the predicted wavelength position to search for the actual maximum. This value should absolutely be smaller than the minimal distance between line wavelengths (in pixels).

    ## sky
    "sky": True, # for IFS only, whether to manually subtract sky before reduction
    "manual_sky": True, # for IFS, whether to subtract residual bkg level manually *after* reduction (recommended). Note: for IRDIS, the value is irrelevant if pca_subtr is set to True.
    "mask_pca_sky_sub": only relevant for IRDIS data when pca_subtr is True. Default: [200,400,4,20,[40,142,180+40,180+142]]" #params for ringed spider mask, respectively: 
	- inner rad of annulus in pixels, 
	- outer rad of annulus in pixels, 
	- number of spider legs/branches, 
	- width of legs in pixels, 
	- list of angles for the legs/branches or single float (in the latter case, corresponds to angle of first spider branch, an automatic separation = 360/n_branches between branches will be considered)
    
# Overwrite if product exists?
    "overwrite_sof": True,
    "overwrite_fits": True

# Processing
    "nproc": 4


************************ 0. CLASSIFICATION ***************************

-> Creates dictionary containing lists for each kind of file.
-> Output: dico_files.csv

************************ IRDIS ***************************
1. master dark
	-> Created from all raw darks available.
	-> Outputs: 
		- master_dark.fits
		- master_badpixelmap.fits

2. gains (just for informative purpose, not further used)
	-> Outputs:
		- master_gain_map.fits
		- nonlin_map.fits
		- nonlin_badpixelmap.fits

3. master sky cube creation for OBJ & PSF.
	-> Created from SKY BKG or INS BG (in this order of priority).
	-> Outputs (if SKY BG or INS BG files are available):
		- master_sky_cube.fits (for OBJ & CEN)
		- master_sky_psf_cube.fits (for PSF)
	
4. Sky subtraction for OBJ, CEN & PSF:
	IF master_sky_cube.fits exists:
	-> Subtracts sky from individual cubes, possibly using PCA if requested in param file.
	-> If not PCA, will simply subtract median of all skies.
	-> Note: not using PCA is risky, for the bkg level can be non-null. If "pca_subtr" is set to False, then it is recommended to set "manual_sky" to True. This will subtract bkg median level (i.e. set it to a median null level)
	ELSE:
	-> subtracts median of raw darks with matching DIT. 
	-> In this case, it is recommended to "manual_sky" to True, so median bkg level will be subtracted.

	-> Outputs:
		-> individual raw cubes after SKY subtraction, saved in a "skysub/" folder.

5. master flat

6. Creation of calibrated cubes


************************ IFS ***************************

TBD